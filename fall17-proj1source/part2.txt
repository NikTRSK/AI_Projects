Input: 000
     w      Cost    Time(ms)  Expansions
  0.00     21.34      974.71    82188.46
  0.25     21.34      387.88    34634.08
  0.50     21.34      114.57    10898.36
  0.75     21.34       27.98     2932.82
  1.00     21.42        8.02      886.30
  1.50     21.66        4.14      457.46
  2.00     22.58        3.15      359.06
  3.00     26.26        3.08      349.50
  5.00     30.30        2.43      278.26
 10.00     36.02        2.71      296.34

Input: 096
     w      Cost    Time(ms)  Expansions
  0.00     22.22     1151.76    99547.14
  0.25     22.22      566.66    50209.06
  0.50     22.22      195.77    17895.16
  0.75     22.22       52.23     5275.44
  1.00     22.22       14.30     1495.74
  1.50     22.82        5.76      620.90
  2.00     23.98        5.17      553.68
  3.00     26.74        3.26      359.56
  5.00     32.58        2.39      263.12
 10.00     39.30        2.67      300.92
 
1. Trends in runtime, # of expansions, path length as w varies?
  The lower the w the more expansions the algorithm makes which results in longer runtime. The number of expansions and runtime decrease as w increases. The cost is constant from w=0.0 to w=1.0 which means we get performance benefits with the w=1.0. With w > 1.0 the runtime improves and less states are expanded but the tradeoff is that the path is not optimal (shortest).

2. Which values guarantee shortest path and why? Why values don't guarantee shortest path and why?